load("@bazel_tools//tools/build_defs/pkg:pkg.bzl", "pkg_tar")
load(
    "//rules/helm:def.bzl",
    helm_package = "package",
    helm_version = "version",
)
load("//rules/ioutil:def.bzl", "print_files")
load(
    "//rules/kubecf:def.bzl",
    "image_list",
    "metadata_file_generator",
    "chart_with_imagelist",
)
load("//rules/yaml_extractor:defs.bzl", "yaml_extractor")
load("//:def.bzl", "project")

package(default_visibility = ["//visibility:public"])

# Generates the KubeCF metadata file.
metadata_file_generator(
    name = "metadata",
    file = "Metadata.yaml",
    operator_chart = project.external_files["cf_operator"].urls[0].format( version = project.external_files["cf_operator"].version )
)

# Groups the static files under the kubecf package to be passed to the Helm packaging target.
filegroup(
    name = "chart_files_static",
    srcs = glob(
        ["**/*"],
        exclude = [
            "**/BUILD.bazel",
            "**/defs.bzl",
        ],
    ),
)

# Packages cf-deployment into a tarball with a specific directory structure to be used by the Helm
# packaging target.
pkg_tar(
    name = "cf_deployment",
    package_dir = "assets",
    srcs = [
        "@cf_deployment//:cf_deployment",
    ],
)

# Extracts the auctioneer job YAML out of the scheduler instance group.
yaml_extractor(
    name = "auctioneer_job",
    src = "@cf_deployment//:cf-deployment.yml",
    filter = """.instance_groups[] | select(.name == "scheduler") | .jobs[] | select(.name == "auctioneer")""",
)

# Extracts the routing-api job YAML out of the api instance group.
yaml_extractor(
    name = "routing_api_job",
    src = "@cf_deployment//:cf-deployment.yml",
    filter = """.instance_groups[] | select(.name == "api") | .jobs[] | select(.name == "routing-api")""",
)

# Packages the extracted jobs into a tarball with a specific directory structure to be used by the
# Helm packaging target.
pkg_tar(
    name = "extracted_jobs",
    package_dir = "assets/jobs",
    srcs = [
        ":auctioneer_job",
        ":routing_api_job",
    ],
)

# Packages the KubeCF Helm chart.
helm_package(
    name = "kubecf",
    srcs = [
        ":chart_files_static",
    ],
    generated = [
        ":metadata",
    ],
    tars = [
        "//bosh/releases:pre_render_scripts",
        ":cf_deployment",
        ":extracted_jobs",
    ],
)

chart_with_imagelist(
    name = "with_imagelist",
    chart = ":kubecf",
    image_list = ":image_list",
)

# Generates a file containing only the KubeCF version.
helm_version(
    name = "version",
    chart = ":kubecf",
)

# Generates a JSON file containing the list of images being used by KubeCF.
image_list(
    name = "image_list",
    chart = ":kubecf",
)

# Prints the list of images being used by KubeCF.
print_files(
    name = "print_image_list",
    srcs = [":image_list"],
)
